<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAAfACYDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD1X/gqf8WPEfgPXfgroWm+Otc8CeHtbutUm1a70DUf7OuHMEdu
        Ic3CjcFBnkyn3WLAkEqpX4A8TftMeO/BuoX2peGPjz8QNSudNmhm05L/AMWyX0MzrMmfNhYbJk25JRl2
        kcMGGQfvT9s/4kaTb/tr+C/CHj+LSte+H1p4P/tm08P+IZJ1046pLdz25uXjgtbgzSCBGRFlQogZ2Uo5
        +b5w+MXxK+D+nS+L7bwx4c+HXh3V7TSJbzSLzw+dStNRs76I+ZbTW06aTEUlWVUI/eorbdrMFJr2sNj6
        FDCzw88PGcpXtN3urq2nTR6rzOGrh6lSrGpGo4pW0VrPX9dj7D+Fv7bPx2+NPgTTPGXg39ln+2fDepeb
        9kvf+FhWEHmeXK8T/JLCrjDxuOVGcZHBBrnPhZ/wUe+KHxs1/V9F8E/s52uv6jpe8zJD8RbGNJUSQxPL
        byPAqXMSvhTJCXQb48t86bvkXwD+0frX/DF3gP4Ww2epaV4VVry01COz3DUvF9xPf3Dx6bZiM71tCJFW
        aQYeVt0CbVWVz+g/7IHwJ17wrrkfxD+IyWGn+P8AUPD8OkWXh7RIUt7DRNLjMOLdUiwrylooTJIRj5Vj
        i2xxjPhUa1KrKpTSbcVutr3V0/RXvbZ2uevWw1ShTp1Z2XNsutu9uze199bHq37Lnx0/4aU+BPhn4j/2
        J/wjn9tfav8AiWfa/tXk+TdSwf63Ym7PlbvujG7HOMkryr/glx/yYn8Mv+4n/wCnS7oqzmOI+LdlpVz/
        AMFLbSbWbvUbOztPhH9p36XqF1ZzFl1aQBd1u6O+cn5MkE44JAxxnxjh8P22neP9W1mPxa+mnw5fNJp9
        x4x1SVJkW3kkMEyfaQpDrgEZKnlc8jOD+3l8FvFHwX+I/wAQf2gIfDngHx74I1v+yl1K38U6Euo32iyR
        Qi0QwxSSIjxSSCAOyvvzKv7srEXNnTf2MPj1q2m2d7c/Cv8AZf0q5uIUlksLnw9N5tsxUExv5ULxllPB
        KMy5BwzDkw7SvH+vvLjeDU9N/wAu67fmXf2E/ghD4t+Fdj+0DqFqNY8UaotzaaFpsEYSDQLGGaS2MdrG
        qt+8cQlN4UYV1VQiKxb6c/Za8ea/4z1PxwNZ0i40+1tLm2ghvLsNvurjZJ56hjkEIFj4XjLMcfNk+QfB
        f9ir9oT4OfC/w/4Q0D9p238N6bp8LMNKtPAllfQ20srtNMiXE7iSVfNkkIZgpII+VfujsX/Zw/aYlkjk
        f9rVHkjJKO3wz0slSRg4PmcccV6uExNDC4CpgY0V71rS6qzv872/XVmGJ9tisSsVUqNvr59Plb/gbEn/
        AAS4/wCTE/hl/wBxP/06XdFeq/sufAv/AIZr+BPhn4cf23/wkf8AYv2r/iZ/ZPsvneddSz/6re+3Hm7f
        vHO3PGcArzTQ/9k=
</value>
  </data>
</root>